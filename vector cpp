
#include <iostream>
#include "Vector.h"
using namespace std;

Vector::Vector(void)
{
	vec[10] = 0;
	n = 0;
}
Vector::~Vector(void)
{
}

void Vector::set_n(int _n) {
	n = _n;
}
int Vector:: get_n() {
	//Devolver el atributo n
	return n;
}
void Vector::cargar(int _n, int _vec[]) {
	for (int i = 0; i < _n; i++) {
		cout << "Vec[" << i << "] =";
		cin >> vec[i];
	}
}
//Equivale a setear el vector ,dar valores al vector
//Los areglos funcionan por referencia no necesitan &
int Vector::mostrar(int _vec[], int _n) {
	for (int i = 0; i < _n; i++) {
		cout << "_Vector:[" << i << "]=" << _vec[i] << endl;
		return 0;
	}
	void Vector::ordenar(int _vec[], int _vec2[]){
		int aux;
		for (int i = 0; i < (n - 1); i++) {
			_vec2[i] = _vec[i];
			for (int j = i; j < n; j++) {
				if (_vec[i] > _vec[j]) {
					aux = _vec[i];
					_vec[i] = _vec[j];
					_vec[j] = aux;
				}
			}
		}
	}
	int Vector::promedio(int _vec[], int _n) {
		int prom; //prom es auxiliar
		int aux = 0; //aux es el acumulador de suma 
		for (int i = 0; i < _n; i++) {
			aux = aux + _vec[i];
			prom = aux / _n:
			return prom;
		}
